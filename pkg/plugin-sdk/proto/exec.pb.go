// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: proto/exec.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamSignal int32

const (
	StreamSignal_NONE     StreamSignal = 0
	StreamSignal_CLOSE    StreamSignal = 1
	StreamSignal_SIGINT   StreamSignal = 2
	StreamSignal_SIGQUIT  StreamSignal = 3
	StreamSignal_SIGTERM  StreamSignal = 4
	StreamSignal_SIGKILL  StreamSignal = 5
	StreamSignal_SIGHUP   StreamSignal = 6
	StreamSignal_SIGUSR1  StreamSignal = 7
	StreamSignal_SIGUSR2  StreamSignal = 8
	StreamSignal_SIGWINCH StreamSignal = 9
)

// Enum value maps for StreamSignal.
var (
	StreamSignal_name = map[int32]string{
		0: "NONE",
		1: "CLOSE",
		2: "SIGINT",
		3: "SIGQUIT",
		4: "SIGTERM",
		5: "SIGKILL",
		6: "SIGHUP",
		7: "SIGUSR1",
		8: "SIGUSR2",
		9: "SIGWINCH",
	}
	StreamSignal_value = map[string]int32{
		"NONE":     0,
		"CLOSE":    1,
		"SIGINT":   2,
		"SIGQUIT":  3,
		"SIGTERM":  4,
		"SIGKILL":  5,
		"SIGHUP":   6,
		"SIGUSR1":  7,
		"SIGUSR2":  8,
		"SIGWINCH": 9,
	}
)

func (x StreamSignal) Enum() *StreamSignal {
	p := new(StreamSignal)
	*p = x
	return p
}

func (x StreamSignal) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamSignal) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_exec_proto_enumTypes[0].Descriptor()
}

func (StreamSignal) Type() protoreflect.EnumType {
	return &file_proto_exec_proto_enumTypes[0]
}

func (x StreamSignal) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamSignal.Descriptor instead.
func (StreamSignal) EnumDescriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{0}
}

type StreamOutput_Target int32

const (
	StreamOutput_STDOUT StreamOutput_Target = 0
	StreamOutput_STDERR StreamOutput_Target = 1
)

// Enum value maps for StreamOutput_Target.
var (
	StreamOutput_Target_name = map[int32]string{
		0: "STDOUT",
		1: "STDERR",
	}
	StreamOutput_Target_value = map[string]int32{
		"STDOUT": 0,
		"STDERR": 1,
	}
)

func (x StreamOutput_Target) Enum() *StreamOutput_Target {
	p := new(StreamOutput_Target)
	*p = x
	return p
}

func (x StreamOutput_Target) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamOutput_Target) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_exec_proto_enumTypes[1].Descriptor()
}

func (StreamOutput_Target) Type() protoreflect.EnumType {
	return &file_proto_exec_proto_enumTypes[1]
}

func (x StreamOutput_Target) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamOutput_Target.Descriptor instead.
func (StreamOutput_Target) EnumDescriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{16, 0}
}

type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attached  bool                   `protobuf:"varint,2,opt,name=attached,proto3" json:"attached,omitempty"`
	Command   []string               `protobuf:"bytes,3,rep,name=command,proto3" json:"command,omitempty"`
	Params    map[string]string      `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels    map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{0}
}

func (x *Session) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Session) GetAttached() bool {
	if x != nil {
		return x.Attached
	}
	return false
}

func (x *Session) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Session) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Session) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Session) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type SessionOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Command        []string          `protobuf:"bytes,2,rep,name=command,proto3" json:"command,omitempty"`
	Tty            bool              `protobuf:"varint,3,opt,name=tty,proto3" json:"tty,omitempty"`
	Params         map[string]string `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels         map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ResourcePlugin string            `protobuf:"bytes,6,opt,name=resource_plugin,json=resourcePlugin,proto3" json:"resource_plugin,omitempty"`
	ResourceKey    string            `protobuf:"bytes,7,opt,name=resource_key,json=resourceKey,proto3" json:"resource_key,omitempty"`
	ResourceData   *structpb.Struct  `protobuf:"bytes,8,opt,name=resource_data,json=resourceData,proto3" json:"resource_data,omitempty"`
}

func (x *SessionOptions) Reset() {
	*x = SessionOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionOptions) ProtoMessage() {}

func (x *SessionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionOptions.ProtoReflect.Descriptor instead.
func (*SessionOptions) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{1}
}

func (x *SessionOptions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SessionOptions) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *SessionOptions) GetTty() bool {
	if x != nil {
		return x.Tty
	}
	return false
}

func (x *SessionOptions) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *SessionOptions) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *SessionOptions) GetResourcePlugin() string {
	if x != nil {
		return x.ResourcePlugin
	}
	return ""
}

func (x *SessionOptions) GetResourceKey() string {
	if x != nil {
		return x.ResourceKey
	}
	return ""
}

func (x *SessionOptions) GetResourceData() *structpb.Struct {
	if x != nil {
		return x.ResourceData
	}
	return nil
}

type ExecHandler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugin        string                       `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	Resource      string                       `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	TargetBuilder *ResourceActionTargetBuilder `protobuf:"bytes,3,opt,name=target_builder,json=targetBuilder,proto3" json:"target_builder,omitempty"`
}

func (x *ExecHandler) Reset() {
	*x = ExecHandler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecHandler) ProtoMessage() {}

func (x *ExecHandler) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecHandler.ProtoReflect.Descriptor instead.
func (*ExecHandler) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{2}
}

func (x *ExecHandler) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

func (x *ExecHandler) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *ExecHandler) GetTargetBuilder() *ResourceActionTargetBuilder {
	if x != nil {
		return x.TargetBuilder
	}
	return nil
}

type GetSupportedResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handlers []*ExecHandler `protobuf:"bytes,1,rep,name=handlers,proto3" json:"handlers,omitempty"`
}

func (x *GetSupportedResourcesResponse) Reset() {
	*x = GetSupportedResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSupportedResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedResourcesResponse) ProtoMessage() {}

func (x *GetSupportedResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedResourcesResponse.ProtoReflect.Descriptor instead.
func (*GetSupportedResourcesResponse) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{3}
}

func (x *GetSupportedResourcesResponse) GetHandlers() []*ExecHandler {
	if x != nil {
		return x.Handlers
	}
	return nil
}

type CreateSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Command string            `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Tty     bool              `protobuf:"varint,3,opt,name=tty,proto3" json:"tty,omitempty"`
	Params  map[string]string `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels  map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSessionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateSessionRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *CreateSessionRequest) GetTty() bool {
	if x != nil {
		return x.Tty
	}
	return false
}

func (x *CreateSessionRequest) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *CreateSessionRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type CreateSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Success bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error   string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *CreateSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateSessionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSessionRequest) Reset() {
	*x = GetSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionRequest) ProtoMessage() {}

func (x *GetSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionRequest.ProtoReflect.Descriptor instead.
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{6}
}

func (x *GetSessionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Success bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error   string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetSessionResponse) Reset() {
	*x = GetSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionResponse) ProtoMessage() {}

func (x *GetSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionResponse.ProtoReflect.Descriptor instead.
func (*GetSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{7}
}

func (x *GetSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *GetSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetSessionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sessions []*Session `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	Success  bool       `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error    string     `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ListSessionsResponse) Reset() {
	*x = ListSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsResponse) ProtoMessage() {}

func (x *ListSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListSessionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{8}
}

func (x *ListSessionsResponse) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *ListSessionsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListSessionsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type AttachSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AttachSessionRequest) Reset() {
	*x = AttachSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachSessionRequest) ProtoMessage() {}

func (x *AttachSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachSessionRequest.ProtoReflect.Descriptor instead.
func (*AttachSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{9}
}

func (x *AttachSessionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AttachSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Buffer  []byte   `protobuf:"bytes,2,opt,name=buffer,proto3" json:"buffer,omitempty"`
}

func (x *AttachSessionResponse) Reset() {
	*x = AttachSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachSessionResponse) ProtoMessage() {}

func (x *AttachSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachSessionResponse.ProtoReflect.Descriptor instead.
func (*AttachSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{10}
}

func (x *AttachSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *AttachSessionResponse) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

type CloseSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CloseSessionRequest) Reset() {
	*x = CloseSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionRequest) ProtoMessage() {}

func (x *CloseSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionRequest.ProtoReflect.Descriptor instead.
func (*CloseSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{11}
}

func (x *CloseSessionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CloseSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CloseSessionResponse) Reset() {
	*x = CloseSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionResponse) ProtoMessage() {}

func (x *CloseSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSessionResponse.ProtoReflect.Descriptor instead.
func (*CloseSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{12}
}

func (x *CloseSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CloseSessionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ResizeSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Rows int32  `protobuf:"varint,2,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols int32  `protobuf:"varint,3,opt,name=cols,proto3" json:"cols,omitempty"`
}

func (x *ResizeSessionRequest) Reset() {
	*x = ResizeSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResizeSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeSessionRequest) ProtoMessage() {}

func (x *ResizeSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeSessionRequest.ProtoReflect.Descriptor instead.
func (*ResizeSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{13}
}

func (x *ResizeSessionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResizeSessionRequest) GetRows() int32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *ResizeSessionRequest) GetCols() int32 {
	if x != nil {
		return x.Cols
	}
	return 0
}

type ResizeSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ResizeSessionResponse) Reset() {
	*x = ResizeSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResizeSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeSessionResponse) ProtoMessage() {}

func (x *ResizeSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeSessionResponse.ProtoReflect.Descriptor instead.
func (*ResizeSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{14}
}

func (x *ResizeSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResizeSessionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StreamInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StreamInput) Reset() {
	*x = StreamInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamInput) ProtoMessage() {}

func (x *StreamInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamInput.ProtoReflect.Descriptor instead.
func (*StreamInput) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{15}
}

func (x *StreamInput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StreamInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type StreamOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Target StreamOutput_Target `protobuf:"varint,2,opt,name=target,proto3,enum=com.omniview.pluginsdk.StreamOutput_Target" json:"target,omitempty"`
	Data   []byte              `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Signal StreamSignal        `protobuf:"varint,4,opt,name=signal,proto3,enum=com.omniview.pluginsdk.StreamSignal" json:"signal,omitempty"`
}

func (x *StreamOutput) Reset() {
	*x = StreamOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_exec_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamOutput) ProtoMessage() {}

func (x *StreamOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exec_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamOutput.ProtoReflect.Descriptor instead.
func (*StreamOutput) Descriptor() ([]byte, []int) {
	return file_proto_exec_proto_rawDescGZIP(), []int{16}
}

func (x *StreamOutput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StreamOutput) GetTarget() StreamOutput_Target {
	if x != nil {
		return x.Target
	}
	return StreamOutput_STDOUT
}

func (x *StreamOutput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StreamOutput) GetSignal() StreamSignal {
	if x != nil {
		return x.Signal
	}
	return StreamSignal_NONE
}

var File_proto_exec_proto protoreflect.FileDescriptor

var file_proto_exec_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x03, 0x0a,
	0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x43,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x43, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39,
	0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe4, 0x03, 0x0a, 0x0e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x74, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f,
	0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64,
	0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x4a, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x9d, 0x01, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x22, 0x60, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x08, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x08, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x73, 0x22, 0xec, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x74, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d,
	0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x50, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x64, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x82, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7f, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x83, 0x01, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d,
	0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x26, 0x0a, 0x14, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6a, 0x0a, 0x15, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x46, 0x0a,
	0x14, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4e, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x6c, 0x73, 0x22, 0x47, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x31,
	0x0a, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xd7, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x22, 0x20, 0x0a, 0x06, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x44, 0x4f, 0x55, 0x54, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x54, 0x44, 0x45, 0x52, 0x52, 0x10, 0x01, 0x2a, 0x8a, 0x01, 0x0a, 0x0c,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x47, 0x49, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x49, 0x47, 0x51, 0x55, 0x49, 0x54, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49,
	0x47, 0x54, 0x45, 0x52, 0x4d, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x4b, 0x49,
	0x4c, 0x4c, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x47, 0x48, 0x55, 0x50, 0x10, 0x06,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x49, 0x47, 0x55, 0x53, 0x52, 0x31, 0x10, 0x07, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x49, 0x47, 0x55, 0x53, 0x52, 0x32, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x49,
	0x47, 0x57, 0x49, 0x4e, 0x43, 0x48, 0x10, 0x09, 0x32, 0xa5, 0x07, 0x0a, 0x0a, 0x45, 0x78, 0x65,
	0x63, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x66, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f,
	0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64,
	0x6b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x63, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f,
	0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64,
	0x6b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2c, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6c, 0x0a, 0x0d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6c, 0x0a, 0x0d, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69,
	0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x0d, 0x52, 0x65, 0x73,
	0x69, 0x7a, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f,
	0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64,
	0x6b, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e, 0x69, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6d, 0x6e,
	0x69, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_exec_proto_rawDescOnce sync.Once
	file_proto_exec_proto_rawDescData = file_proto_exec_proto_rawDesc
)

func file_proto_exec_proto_rawDescGZIP() []byte {
	file_proto_exec_proto_rawDescOnce.Do(func() {
		file_proto_exec_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_exec_proto_rawDescData)
	})
	return file_proto_exec_proto_rawDescData
}

var file_proto_exec_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_exec_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_proto_exec_proto_goTypes = []any{
	(StreamSignal)(0),                     // 0: com.omniview.pluginsdk.StreamSignal
	(StreamOutput_Target)(0),              // 1: com.omniview.pluginsdk.StreamOutput.Target
	(*Session)(nil),                       // 2: com.omniview.pluginsdk.Session
	(*SessionOptions)(nil),                // 3: com.omniview.pluginsdk.SessionOptions
	(*ExecHandler)(nil),                   // 4: com.omniview.pluginsdk.ExecHandler
	(*GetSupportedResourcesResponse)(nil), // 5: com.omniview.pluginsdk.GetSupportedResourcesResponse
	(*CreateSessionRequest)(nil),          // 6: com.omniview.pluginsdk.CreateSessionRequest
	(*CreateSessionResponse)(nil),         // 7: com.omniview.pluginsdk.CreateSessionResponse
	(*GetSessionRequest)(nil),             // 8: com.omniview.pluginsdk.GetSessionRequest
	(*GetSessionResponse)(nil),            // 9: com.omniview.pluginsdk.GetSessionResponse
	(*ListSessionsResponse)(nil),          // 10: com.omniview.pluginsdk.ListSessionsResponse
	(*AttachSessionRequest)(nil),          // 11: com.omniview.pluginsdk.AttachSessionRequest
	(*AttachSessionResponse)(nil),         // 12: com.omniview.pluginsdk.AttachSessionResponse
	(*CloseSessionRequest)(nil),           // 13: com.omniview.pluginsdk.CloseSessionRequest
	(*CloseSessionResponse)(nil),          // 14: com.omniview.pluginsdk.CloseSessionResponse
	(*ResizeSessionRequest)(nil),          // 15: com.omniview.pluginsdk.ResizeSessionRequest
	(*ResizeSessionResponse)(nil),         // 16: com.omniview.pluginsdk.ResizeSessionResponse
	(*StreamInput)(nil),                   // 17: com.omniview.pluginsdk.StreamInput
	(*StreamOutput)(nil),                  // 18: com.omniview.pluginsdk.StreamOutput
	nil,                                   // 19: com.omniview.pluginsdk.Session.ParamsEntry
	nil,                                   // 20: com.omniview.pluginsdk.Session.LabelsEntry
	nil,                                   // 21: com.omniview.pluginsdk.SessionOptions.ParamsEntry
	nil,                                   // 22: com.omniview.pluginsdk.SessionOptions.LabelsEntry
	nil,                                   // 23: com.omniview.pluginsdk.CreateSessionRequest.ParamsEntry
	nil,                                   // 24: com.omniview.pluginsdk.CreateSessionRequest.LabelsEntry
	(*timestamppb.Timestamp)(nil),         // 25: google.protobuf.Timestamp
	(*structpb.Struct)(nil),               // 26: google.protobuf.Struct
	(*ResourceActionTargetBuilder)(nil),   // 27: com.omniview.pluginsdk.ResourceActionTargetBuilder
	(*emptypb.Empty)(nil),                 // 28: google.protobuf.Empty
}
var file_proto_exec_proto_depIdxs = []int32{
	19, // 0: com.omniview.pluginsdk.Session.params:type_name -> com.omniview.pluginsdk.Session.ParamsEntry
	20, // 1: com.omniview.pluginsdk.Session.labels:type_name -> com.omniview.pluginsdk.Session.LabelsEntry
	25, // 2: com.omniview.pluginsdk.Session.created_at:type_name -> google.protobuf.Timestamp
	21, // 3: com.omniview.pluginsdk.SessionOptions.params:type_name -> com.omniview.pluginsdk.SessionOptions.ParamsEntry
	22, // 4: com.omniview.pluginsdk.SessionOptions.labels:type_name -> com.omniview.pluginsdk.SessionOptions.LabelsEntry
	26, // 5: com.omniview.pluginsdk.SessionOptions.resource_data:type_name -> google.protobuf.Struct
	27, // 6: com.omniview.pluginsdk.ExecHandler.target_builder:type_name -> com.omniview.pluginsdk.ResourceActionTargetBuilder
	4,  // 7: com.omniview.pluginsdk.GetSupportedResourcesResponse.handlers:type_name -> com.omniview.pluginsdk.ExecHandler
	23, // 8: com.omniview.pluginsdk.CreateSessionRequest.params:type_name -> com.omniview.pluginsdk.CreateSessionRequest.ParamsEntry
	24, // 9: com.omniview.pluginsdk.CreateSessionRequest.labels:type_name -> com.omniview.pluginsdk.CreateSessionRequest.LabelsEntry
	2,  // 10: com.omniview.pluginsdk.CreateSessionResponse.session:type_name -> com.omniview.pluginsdk.Session
	2,  // 11: com.omniview.pluginsdk.GetSessionResponse.session:type_name -> com.omniview.pluginsdk.Session
	2,  // 12: com.omniview.pluginsdk.ListSessionsResponse.sessions:type_name -> com.omniview.pluginsdk.Session
	2,  // 13: com.omniview.pluginsdk.AttachSessionResponse.session:type_name -> com.omniview.pluginsdk.Session
	1,  // 14: com.omniview.pluginsdk.StreamOutput.target:type_name -> com.omniview.pluginsdk.StreamOutput.Target
	0,  // 15: com.omniview.pluginsdk.StreamOutput.signal:type_name -> com.omniview.pluginsdk.StreamSignal
	28, // 16: com.omniview.pluginsdk.ExecPlugin.GetSupportedResources:input_type -> google.protobuf.Empty
	8,  // 17: com.omniview.pluginsdk.ExecPlugin.GetSession:input_type -> com.omniview.pluginsdk.GetSessionRequest
	28, // 18: com.omniview.pluginsdk.ExecPlugin.ListSessions:input_type -> google.protobuf.Empty
	3,  // 19: com.omniview.pluginsdk.ExecPlugin.CreateSession:input_type -> com.omniview.pluginsdk.SessionOptions
	11, // 20: com.omniview.pluginsdk.ExecPlugin.AttachSession:input_type -> com.omniview.pluginsdk.AttachSessionRequest
	11, // 21: com.omniview.pluginsdk.ExecPlugin.DetachSession:input_type -> com.omniview.pluginsdk.AttachSessionRequest
	13, // 22: com.omniview.pluginsdk.ExecPlugin.CloseSession:input_type -> com.omniview.pluginsdk.CloseSessionRequest
	15, // 23: com.omniview.pluginsdk.ExecPlugin.ResizeSession:input_type -> com.omniview.pluginsdk.ResizeSessionRequest
	17, // 24: com.omniview.pluginsdk.ExecPlugin.Stream:input_type -> com.omniview.pluginsdk.StreamInput
	5,  // 25: com.omniview.pluginsdk.ExecPlugin.GetSupportedResources:output_type -> com.omniview.pluginsdk.GetSupportedResourcesResponse
	9,  // 26: com.omniview.pluginsdk.ExecPlugin.GetSession:output_type -> com.omniview.pluginsdk.GetSessionResponse
	10, // 27: com.omniview.pluginsdk.ExecPlugin.ListSessions:output_type -> com.omniview.pluginsdk.ListSessionsResponse
	7,  // 28: com.omniview.pluginsdk.ExecPlugin.CreateSession:output_type -> com.omniview.pluginsdk.CreateSessionResponse
	12, // 29: com.omniview.pluginsdk.ExecPlugin.AttachSession:output_type -> com.omniview.pluginsdk.AttachSessionResponse
	12, // 30: com.omniview.pluginsdk.ExecPlugin.DetachSession:output_type -> com.omniview.pluginsdk.AttachSessionResponse
	14, // 31: com.omniview.pluginsdk.ExecPlugin.CloseSession:output_type -> com.omniview.pluginsdk.CloseSessionResponse
	16, // 32: com.omniview.pluginsdk.ExecPlugin.ResizeSession:output_type -> com.omniview.pluginsdk.ResizeSessionResponse
	18, // 33: com.omniview.pluginsdk.ExecPlugin.Stream:output_type -> com.omniview.pluginsdk.StreamOutput
	25, // [25:34] is the sub-list for method output_type
	16, // [16:25] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_proto_exec_proto_init() }
func file_proto_exec_proto_init() {
	if File_proto_exec_proto != nil {
		return
	}
	file_proto_resource_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_exec_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SessionOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ExecHandler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetSupportedResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AttachSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AttachSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CloseSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CloseSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ResizeSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ResizeSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*StreamInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_exec_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*StreamOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_exec_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_exec_proto_goTypes,
		DependencyIndexes: file_proto_exec_proto_depIdxs,
		EnumInfos:         file_proto_exec_proto_enumTypes,
		MessageInfos:      file_proto_exec_proto_msgTypes,
	}.Build()
	File_proto_exec_proto = out.File
	file_proto_exec_proto_rawDesc = nil
	file_proto_exec_proto_goTypes = nil
	file_proto_exec_proto_depIdxs = nil
}
