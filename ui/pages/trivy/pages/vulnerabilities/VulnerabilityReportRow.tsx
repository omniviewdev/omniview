import React from 'react';

import Divider from '@mui/joy/Divider';
import Grid from '@mui/joy/Grid';
import Link from '@mui/joy/Link';
import List from '@mui/joy/List';
import ListDivider from '@mui/joy/ListDivider';
import ListItem from '@mui/joy/ListItem';
import ListItemContent from '@mui/joy/ListItemContent';
import Sheet from '@mui/joy/Sheet';
import Typography from '@mui/joy/Typography';

import { BrowserOpenURL } from '@omniviewdev/runtime/runtime';

import {
  type Row as RowT,
  flexRender,
} from '@tanstack/react-table';
import { type TrivyVulnerability } from '../../types';
import { VulnerabilityInfoList } from './VulnerabilityInfoList';
import VulnerabilityVectorsList from './VulnerabilityVectorsList';

export default function Row(props: { row: RowT<TrivyVulnerability> }) {
  const { row } = props;

  return (
    <React.Fragment>
      <tr
        key={row.id}
        style={{
          cursor: 'pointer',
          WebkitUserSelect: 'text',
          display: 'flex',
          width: '100%',
        }}
      >
        {row.getVisibleCells().map(cell => (
          <td
            key={cell.id}
            onClick={() => {
              row.toggleExpanded();
            }}
            style={{
              width: cell.column.getSize() === Number.MAX_SAFE_INTEGER ? 'auto' : cell.column.getSize(),
              // minWidth: cell.column.getSize() === Number.MAX_SAFE_INTEGER ? 'auto' : cell.column.getSize(),
              maxWidth: cell.column.getSize() === Number.MAX_SAFE_INTEGER ? 'auto' : cell.column.getSize(),
              display: 'flex',
              flex: 1,
              textOverflow: 'ellipsis',
              overflow: 'hidden',
              // always have text vertically centered
              alignItems: 'center',
            }}
          >
            {flexRender(cell.column.columnDef.cell, cell.getContext())}
          </td>
        ))}
      </tr>
      <tr>
        <td style={{ height: 0, padding: 0 }}>
          {row.getIsExpanded() && (
            <Sheet
              component={Grid}
              container
              variant="soft"
              p={2}
              sx={{
                pl: 6,
                display: 'flex',
                alignItems: 'stretch',
                boxShadow: 'inset 0 3px 6px 0 rgba(0 0 0 / 0.08)',
              }}
            >
              <Grid
                xl={7}
                xs={12}
                sx={{
                  display: 'flex',
                  flexDirection: 'column',
                  gap: 1,
                  paddingRight: 2,
                }}
              >
                <Typography level="h4" component="div">
                  {row.original.VulnerabilityID}
                </Typography>
                <Typography level="title-md" component="div">
                  {row.original.Title}
                </Typography>
                <Typography level="body-sm" component="div">
                  {row.original.Description}
                </Typography>
                <Sheet
                  variant="outlined"
                  sx={{
                    borderRadius: 'sm',
                    mt: 1,
                    display: 'flex',
                    flexDirection: 'column',
                  }}
                >
                  <Typography p={1} level="title-sm" fontWeight={700} component="div">
                    References
                  </Typography>
                  <Divider />
                  <List
                    size='sm'
                    sx={{
                      p: 0,
                      maxHeight: 462,
                      overflow: 'auto',
                      overscrollBehavior: 'contain',
                    }}
                  >
                    {row.original.References.map((display, index) => (
                      <>
                        <ListItem key={display}>
                          <ListItemContent
                            sx={{
                              display: 'flex',
                              justifyContent: 'space-between',
                              alignItems: 'center',
                            }}
                          >
                            <Typography level="body-sm" fontWeight={600} component="div">
                              <Link
                                color='primary'
                                component='button'
                                fontWeight='lg'
                                onClick={() => {
                                  BrowserOpenURL(display);
                                }}
                              >
                                {display}
                              </Link>
                            </Typography>
                          </ListItemContent>
                        </ListItem>
                        {index < row.original.References?.length - 1 && <ListDivider sx={{ m: 0 }} />}
                      </>
                    ))}
                  </List>
                </Sheet>
              </Grid>
              <Grid
                xl={5}
                xs={12}
                sx={{
                  display: 'flex',
                  flexDirection: 'column',
                  gap: 1,
                }}
              >
                <VulnerabilityInfoList item={row.original} />
                {row.original?.CVSS?.nvd?.V3Vector && <VulnerabilityVectorsList vector={row.original.CVSS.nvd.V3Vector} />}
              </Grid>
            </Sheet>
          )}
        </td>
      </tr>
    </React.Fragment>
  );
}

