name: Build and Release

on:
  push:
    tags:
      - "v*"

env:
  # Necessary for most environments as build failure can occur due to OOM issues
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    strategy:
      # Failure in one platform build won't impact the others
      fail-fast: false
      matrix:
        build:
          - name: "linux"
            platform: "linux/amd64"
            os: "ubuntu-latest"
          - name: "windows"
            platform: "windows/amd64"
            os: "windows-latest"

    runs-on: ${{ matrix.build.os }}
    steps:
      ###########################################################################
      # Prepare release information
      ###########################################################################
      - name: Normalize version tag
        id: normalise_version
        shell: bash
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            version=$(echo "${{ github.ref_name }}" | sed -e 's/^v//' | sed -e 's/-//')
          else
            version="0.0.1"
          fi
          echo "version=${version}" >> "$GITHUB_OUTPUT"

      - name: Normalise platform tag
        id: normalise_platform
        shell: bash
        run: |
          tag=$(echo ${{ matrix.build.platform }} | sed -e 's/\//_/g')
          echo "tag=$tag" >> "$GITHUB_OUTPUT"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: |
            - args: []
            - args: [--global, typescript]

      - name: Build runtime
        run: pnpm run build
        working-directory: packages/omniviewdev-runtime

      - name: Build Omniview
        uses: dAppServer/wails-build-action@main
        id: build
        with:
          build-name: Omniview
          build-platform: ${{ matrix.build.platform }}
          package: false
          go-version: "1.24"
          node-version: "20.x"
          wails-version: "master"

      ###########################################################################
      # Windows preparation
      ###########################################################################
      - name: Rename executable (Windows)
        working-directory: ./build/bin
        if: github.ref_type == 'tag' && matrix.build.os == 'windows-latest'
        run: Rename-Item -Path "Omniview" -NewName "Omniview_${{ steps.normalise_version.outputs.version }}_${{ steps.normalise_platform.outputs.tag }}.exe"

      - name: Release (Windows)
        uses: softprops/action-gh-release@v1
        if: github.ref_type == 'tag' && matrix.build.os == 'windows-latest'
        with:
          files: ./build/bin/Omniview_${{ steps.normalise_version.outputs.version }}_${{ steps.normalise_platform.outputs.tag }}.exe
          token: ${{ secrets.GITHUB_TOKEN }}

      ###########################################################################
      # Linux preparation
      ###########################################################################
      - name: Rename executable (Linux)
        working-directory: ./build/bin
        if: github.ref_type == 'tag' && matrix.build.os == 'ubuntu-latest'
        run: mv "Omniview" "Omniview_${{ steps.normalise_version.outputs.version }}_${{ steps.normalise_platform.outputs.tag }}"

      - name: Release (Linux)
        uses: softprops/action-gh-release@v1
        if: github.ref_type == 'tag' && matrix.build.os == 'ubuntu-latest'
        with:
          files: ./build/bin/Omniview_${{ steps.normalise_version.outputs.version }}_${{ steps.normalise_platform.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
